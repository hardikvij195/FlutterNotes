Flutter - On Boardig Liquid Swipe

dependencies:
  flutter:
    sdk: flutter
  provider: ^4.0.4  



 assets:
    - assets/
  fonts:
    - family: Billy
      fonts:
        - asset: assets/font.ttf  
		
		
		
Files --- 

main.dart  , liquid_swipe.dart 
-> Clippers - CircularWave.dart , WaveLayer.dart 
-> Helpers - Helpers.dart , side_update.dart 
-> PageHelpers - animated_page_dragger.dart , page_dragger.dart , page_reveal.dart , page.dart 
-> Provider - iamariderprovider.dart  		


main.dart -------------


import 'dart:math';

import 'package:flutter/material.dart';
import 'package:on_boarding_liquid_swipe/liquid_swipe.dart';

void main() {
  runApp(
    MyApp(),
  );
}

class MyApp extends StatefulWidget {
  static final style = TextStyle(
    fontSize: 20,
    fontFamily: "Billy",
    fontWeight: FontWeight.w600,
  );

  @override
  _MyAppState createState() => _MyAppState();
}

class _MyAppState extends State<MyApp> {
  int page = 0;

  UpdateType updateType;

  final pages = [
    Container(
      color: Colors.blue,
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.center,
        mainAxisSize: MainAxisSize.max,
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        children: <Widget>[
          Center(
              child: Image.asset(
              'assets/1.png',               
              height: 250.0,
              width: 250.0,                       
            ),
          ),
          Padding(
            padding: EdgeInsets.all(0.0),
          ),
          Column(
            children: <Widget>[
            Text(
                "Take a",
                style: MyApp.style,
              ), Text(
                "Take a",
                style: MyApp.style,
              ),
               Text(
                "Take a",
                style: MyApp.style,
              ),
               Text(
                "Take a",
                style: MyApp.style,
              ),
               Text(
                "Take a",
                style: MyApp.style,
              ),
              Text(
                "Hi",
                style: MyApp.style,
              ),
              Text(
                "It's Me",
                style: MyApp.style,
              ),
              Text(
                "Sahdeep",
                style: MyApp.style,
              ),
            ],
          ),
        ],
      ),
    ),
    Container(
      color: Colors.deepPurpleAccent,
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.center,
        mainAxisSize: MainAxisSize.max,
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        children: <Widget>[
          Image.asset(
            'assets/1.png',
            fit: BoxFit.cover,
          ),
          Padding(
            padding: EdgeInsets.all(20.0),
          ),
          Column(
            children: <Widget>[
               Text(
                "Take a",
                style: MyApp.style,
              ),
               Text(
                "Take a",
                style: MyApp.style,
              ),
               Text(
                "Take a",
                style: MyApp.style,
              ),
              Text(
                "Take a",
                style: MyApp.style,
              ),
              Text(
                "look at",
                style: MyApp.style,
              ),
              Text(
                "Liquid Swipe",
                style: MyApp.style,
              ),
            ],
          ),
        ],
      ),
    ),
    Container(
      color: Colors.greenAccent,
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.center,
        mainAxisSize: MainAxisSize.max,
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        children: <Widget>[
          Image.asset(
            'assets/1.png',
            fit: BoxFit.cover,
          ),
          Padding(
            padding: EdgeInsets.all(20.0),
          ),
          Column(
            children: <Widget>[
              Text(
                "Liked?",
                style: MyApp.style,
              ),
              Text(
                "Fork!",
                style: MyApp.style,
              ),
              Text(
                "Give Star!",
                style: MyApp.style,
              ),
            ],
          ),
        ],
      ),
    ),
    Container(
      color: Colors.yellowAccent,
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.center,
        mainAxisSize: MainAxisSize.max,
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        children: <Widget>[
          Image.asset(
            'assets/1.png',
            fit: BoxFit.cover,
          ),
          Padding(
            padding: EdgeInsets.all(20.0),
          ),
          Column(
            children: <Widget>[
              Text(
                "Can be",
                style: MyApp.style,
              ),
              Text(
                "Used for",
                style: MyApp.style,
              ),
              Text(
                "Onboarding Design",
                style: MyApp.style,
              ),
            ],
          ),
        ],
      ),
    ),
    Container(
      color: Colors.redAccent,
      child: Column(
        crossAxisAlignment: CrossAxisAlignment.center,
        mainAxisSize: MainAxisSize.max,
        mainAxisAlignment: MainAxisAlignment.spaceEvenly,
        children: <Widget>[
          Image.asset(
            'assets/1.png',
            fit: BoxFit.cover,
          ),
          Padding(
            padding: EdgeInsets.all(20.0),
          ),
          Column(
            children: <Widget>[
              Text(
                "Do",
                style: MyApp.style,
              ),
              Text(
                "Try it",
                style: MyApp.style,
              ),
              Text(
                "Thank You",
                style: MyApp.style,
              ),
            ],
          ),
        ],
      ),
    ),
  ];

  Widget _buildDot(int index) {
    double selectedness = Curves.easeOut.transform(
      max(
        0.0,
        1.0 - ((page ?? 0) - index).abs(),
      ),
    );
    double zoom = 1.0 + (2.0 - 1.0) * selectedness;
    return new Container(
      width: 25.0,
      child: new Center(
        child: new Material(
          color: Colors.white,
          type: MaterialType.circle,
          child: new Container(
            width: 8.0 * zoom,
            height: 8.0 * zoom,
          ),
        ),
      ),
    );
  }

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: Scaffold(
        body: Stack(
          children: <Widget>[
            LiquidSwipe(
              pages: pages,
              fullTransitionValue: 200,
              enableSlideIcon: true,
              enableLoop: true,
              positionSlideIcon: 0.5,
              onPageChangeCallback: pageChangeCallback,
              currentUpdateTypeCallback: updateTypeCallback,
              waveType: WaveType.liquidReveal,
            ),
            Padding(
              padding: EdgeInsets.all(30),
              child: Column(
                children: <Widget>[
                  Expanded(child: SizedBox()),
                  Row(
                    mainAxisAlignment: MainAxisAlignment.center,
                    children: List<Widget>.generate(5, _buildDot),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }

  pageChangeCallback(int lpage) {
    print(lpage);
    setState(() {
      page = lpage;
    });
  }

  updateTypeCallback(UpdateType updateType) {
    print(updateType);
  }
}



liquid_swipe.dart ------


import 'package:flutter/material.dart';
import 'package:flutter/widgets.dart';
import 'package:on_boarding_liquid_swipe/Helpers/Helpers.dart';
import 'package:on_boarding_liquid_swipe/PageHelpers/page.dart';
import 'package:on_boarding_liquid_swipe/PageHelpers/page_dragger.dart';
import 'package:on_boarding_liquid_swipe/PageHelpers/page_reveal.dart';
import 'package:on_boarding_liquid_swipe/Provider/iamariderprovider.dart';
import 'package:provider/provider.dart';

export 'package:on_boarding_liquid_swipe/Helpers/Helpers.dart';

final key = new GlobalKey<_LiquidSwipe>();

typedef OnPageChangeCallback = void Function(int activePageIndex);
typedef CurrentUpdateTypeCallback = void Function(UpdateType updateType);

class LiquidSwipe extends StatefulWidget {
  final List<Widget> pages;
  final double fullTransitionValue;
  final int initialPage;
  final bool enableSlideIcon;
  final Widget slideIconWidget;
  final double positionSlideIcon;
  final bool enableLoop;
  final WaveType waveType;
  final OnPageChangeCallback onPageChangeCallback;
  final CurrentUpdateTypeCallback currentUpdateTypeCallback;

  const LiquidSwipe({
    Key key,
    @required this.pages,
    this.fullTransitionValue = FULL_TARNSITION_PX,
    this.initialPage = 0,
    this.enableSlideIcon = false,
    this.slideIconWidget = const Icon(Icons.arrow_back_ios),
    this.positionSlideIcon = 0.54,
    this.enableLoop = true,
    this.waveType = WaveType.liquidReveal,
    this.onPageChangeCallback,
    this.currentUpdateTypeCallback,
  })  : assert(pages != null),
        assert(fullTransitionValue != null),
        assert(initialPage != null &&
            initialPage >= 0 &&
            initialPage < pages.length),
        assert(positionSlideIcon >= -1 && positionSlideIcon <= 1),
        super(key: key);

  @override
  State<StatefulWidget> createState() => _LiquidSwipe();
}

class _LiquidSwipe extends State<LiquidSwipe> with TickerProviderStateMixin {
  @override
  void initState() {
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    List<Container> pages = widget.pages;
    return ChangeNotifierProvider<IAmARiderProvider>(
      create: (BuildContext context) {
        return IAmARiderProvider(
            widget.initialPage,
            widget.enableLoop,
            pages.length,
            this,
            widget.positionSlideIcon,
            widget.onPageChangeCallback,
            widget.currentUpdateTypeCallback);
      },
      child: Consumer(
        builder: (BuildContext context, IAmARiderProvider model, _) =>
            Stack(
              children: <Widget>[
                CustomPage(
                  pageView: model.slideDirection == SlideDirection.leftToRight
                      ? pages[model.activePageIndex]
                      : pages[model.nextPageIndex],
                ),
                //Pages
                PageReveal(
                  //next page reveal
                  revealPercent: model.slidePercentHor,
                  child: CustomPage(
                    pageView: model.slideDirection == SlideDirection.leftToRight
                        ? pages[model.nextPageIndex]
                        : pages[model.activePageIndex],
                  ),
                  slideDirection: model.slideDirection,
                  iconPosition: widget.positionSlideIcon,
                  waveType: widget.waveType,
                  vertReveal: model.slidePercentVer,
                ),
                PageDragger(
                  //Used for gesture control
                  fullTransitionPX: widget.fullTransitionValue,
                  enableSlideIcon: widget.enableSlideIcon,
                  slideIconWidget: widget.slideIconWidget,
                  iconPosition: widget.positionSlideIcon,
                ), //PageDragger
              ], //Widget//Stack
            ),
      ),
    ); //Scaffold
  }
}














